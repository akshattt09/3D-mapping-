#include<stdio.h>
#include<string.h>
struct ad
{
    char name[30];
    char Complain[1000];
    int  phone,Token_ID;
} x[100];
int n,i,j=0,a=0,sum=0,g,flag,num;
void read();
void add();
void view();
void search();
void edit();
void del();
void show();
int main()
{
    read();
    int c,i,q;
    printf("************************************************************************************************************\n");
    printf("*******                                                                                              *******\n");
    printf("*******                                                                                              *******\n");
    printf("*******                            Name: Bhatt Akshat                                          *******\n");
    printf("*******                            Branch: Cyber Security                                            *******\n");
    printf("*******                            EN. No. : CS31                                                   *******\n");
    printf("*******                            PID:266                                                        *******\n");
    printf("*******                                                                                              *******\n");
    printf("*******                                                                                              *******\n");
    printf("*******                                                                                              *******\n");
    printf("*******                                                                                              *******\n");
    printf("*******                                                                                              *******\n");
    printf("===================================3D Mapping/Modeling of the probllem area of projects.=============================================\n");
    int m,n;

    while(c!=6)
    {

        printf("\n*Enter your choice*\n\n1. Add Complaint\n2. View all your Complaint\n3. Status of your Complaint\n4. Update Complaint\n5. Delete Complaint\n6. Exit\n\nOption=");
        scanf("%d",&c);//choice for option
        fflush(stdin);//making it clear
        if(c==1)//add
        {
            system("cls");
            add();
        }
        else if(c==2)//view
        {
            system("cls");
            view();
        }
        else if(c==3)//search
        {
            system("cls");
            search();
        }
        else if(c==4)//edit
        {
            system("cls");
            edit();
        }
        else if(c==5)//delete
        {
            system("cls");
            del();
        }
        else if(c==6)
        {
            write();
            return 0;
        }
        else
        {
            system("cls");
            printf("\n\nInvalid input , try again by using valid inputs");
        }
        printf("\n\n");
    }
}
void add()
{
    printf("\n\n");
    printf("Already data inputed on the database =%d\n\n",num);//how many inputs
    printf("How many entry do you want to add=\n");
    scanf("%d",&n);
    sum=n+num;

    for(i=num,j=0; i<sum; i++)
    {
        printf("\n");
        fflush(stdin);
        printf("Enter Your Name = ");
        gets(x[i].name);
        printf("Enter phone number = ");
        scanf("%d",&x[i].phone);
        fflush(stdin);
        fflush(stdin);
        printf("Enter Your Complaint = ");
        gets(x[i].Complain);
        fflush(stdin);
        printf("\n");
        j++;
        a++;
        num++;
    }
}
void view()
{
    for(i=0; i<num; i++)
    {
        printf("\n");
        printf("Token Id=%d\n",i);
        printf("Name = ");
        puts(x[i].name);
        printf("Complaint : ");
        puts(x[i].Complain);
        printf("Phone number = 0%d\n",x[i].phone);
        printf("\n\n");
    }
}
void edit()
{
    int q,p;
    fflush(stdin);
    printf("What do you want to edit ?\n");
    printf("Enter your option\n");
    printf("1.Name\n2.Phone No.\n3.Complaint\n");
    printf("Option=");
    scanf("%d",&q);//option
    if(q<=3)
    {
        printf("Enter the Token ID of that Complaint= (0 - %d)=",num-1);
        scanf("%d",&p);//serial number
        if(p<num)
        {
            if(q==1)
            {
                fflush(stdin);
                printf("Enter the new name=");
                gets(x[p].name);

            }
             else if(q==2)
            {
                fflush(stdin);
                printf("Enter the new Phone no =");
                scanf("%d",&x[p].phone);
            }
            else if(q==3)
            {
                fflush(stdin);
                printf("Enter the new Complaint=");
                gets(x[p].Complain);
            }
           
        }
        else
        {
            printf("\n\nInvalid Serial \nTry Again !!\n\n");
        }
    }
    else
    {
        printf("\n\nInvalid option\nTry Again!!\n\n");
    }
}
void search()
{
    int s,h,f;
    char u[100];
    printf("By what do you want to search ?\n");
    printf("1.Token ID\n2.Name\n3.Phone no.\nOption = ");
    scanf("%d",&h);
    if(h==1)
    {
        printf("Enter Token ID of the Complaint=");
        scanf("%d",&s);
        if(s<num)
        {
            printf("\n");
            printf("Token ID=%d\n",s);
            printf("Name = ");
            puts(x[s].name);
            printf("Complaint : ");
            puts(x[s].Complain);
            printf("Phone number = 0%d\n",x[s].phone);
            printf("\n\n");
        }
        else
            printf("\n\nNot Found\n\n");
    }
    else if(h==2)//problem is here.........
    {
        int f=1;
        fflush(stdin);
        printf("Enter your name=");
        gets(u);
        fflush(stdin);
        for(g=0; g<num; g++)
        {
            if(strcmp(u,x[g].name)==0)
            {
                printf("\n");
                printf("Token ID=%d\n",g);
                printf("Name = ");
                puts(x[g].name);
                printf("Complaint = ");
                puts(x[g].Complain);
                printf("Phone number = 0%d\n",x[g].phone);
                printf("\n\n");
                f=0;

            }
        }
        if(f==1)
            printf("\nNot Found\n");

    }   

    else if(h==3)
    {
        int f=1;
        printf("Enter Phone number = ");
        scanf("%d",&f);
        for(g=0; g<num; g++)
        {
            if(f==x[g].phone)
            {
                printf("\n");
                printf("Token ID=%d\n",g);
                printf("Name = ");
                puts(x[g].name);
                printf("Complaint = ");
                puts(x[g].Complain);
                printf("Phone number = 0%d\n",x[g].phone);
                printf("\n\n");
                f=0;
            }

        }
        if(f==1)
            printf("Not Found");
    }
    else
        printf("\n\nInvalid input\n\n");
}
void del()
{
    int f,h;
    printf("Enter the Token ID of Complaint that you want to delete=");
    scanf("%d",&f);
    if(f<num)
    {
        printf("What do you want ?\n");
        printf("1.Remove the whole record\n2.Remove Name\n3.phone number\nOption = ");
        scanf("%d",&h);
        if(h==1)
        {
            while(f<num)
            {
                strcpy(x[f].name,x[f+1].name);
                x[f].phone=x[f+1].phone;
                f++;
            }
            num--;
        }
        else if(h==2)
        {
            strcpy(x[f].name,"Cleared");

        }
        else if(h==3)
        {
            x[f].phone=0;
        }

    }
    else
        printf("\n\nInvalid Token ID number\n");

}
void read()
{
    FILE *fp = fopen("complaint.txt","r");
    if(fp == NULL)
    {
        //create empty file, so that we can open it
        //in the next execution of this program
        fp = fopen("complaint.txt","w");
        fclose(fp);
        printf("File does not exist, I JUST CREATED IT, exiting...\n\n\n");
        return 0;
    }

    num = fread(x, sizeof(struct ad),100, fp);
    fclose(fp);
}
void write()
{
    FILE *fp = fopen("complaint.txt","w");
    if(fp == NULL)
    {
        printf("Error");
        exit(1);
    }
    fwrite(x, sizeof(struct ad),num, fp);

    fclose(fp);
}
